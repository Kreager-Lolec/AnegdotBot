import random

import psycopg2
import Constant_File

mydb = psycopg2.connect(Constant_File.DB_URI, sslmode='require')


def CreateTable():
    mycursor = mydb.cursor()
    mycursor.execute('''
        CREATE TABLE IF NOT EXISTS CHATS (
            ChatId BIGINT PRIMARY KEY,
            CountUsers BIGINT ); ''')
    mydb.commit()
    mycursor.execute(''' 
        CREATE TABLE IF NOT EXISTS CATEGORIES (
            CaterogyId INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            CategoryNameDisplay VARCHAR(255) NOT NULL,
            CategoryNameLogical VARCHAR(255) NOT NULL
        );
                   ''')
    mydb.commit()
    mycursor.execute('''
            CREATE TABLE IF NOT EXISTS ANEGDOTS (
                AnegdotId INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                AnegdotDisplay VARCHAR(255) NOT NULL,
                AnegdotLogical VARCHAR(255) NOT NULL,
                CategoryNameDisplay VARCHAR(255) NOT NULL,
                CategoryNameLogical VARCHAR(255) NOT NULL
        );
                       ''')
    mydb.commit()
    mycursor.execute('''
            CREATE TABLE IF NOT EXISTS ADMINS (
                AdminId INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                AdminUserName VARCHAR(255) NOT NULL
        );
                       ''')
    mydb.commit()
    listadmin = ['mihailik_panchuk', 'kreager', 'Barik_superman']
    for row in listadmin:
        mycursor.execute(f'''INSERT INTO ADMINS (AdminUserName)
        SELECT N'{row}'
        WHERE
            NOT EXISTS (SELECT * FROM ADMINS WHERE AdminUserName = N'{row}' ) ''')
        mydb.commit()
    # Insert INTO CREATE TABLE IF YOU NEED THIS
    # CaterogyId INTEGER,
    # CONSTRAINT FK_AnegdotCatehogy1 FOREIGN KEY (CaterogyId) REFERENCES CATEGORIES(CaterogyId)
    mycursor.close()


def checkIfAdmin(username):
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT COUNT(*) FROM ADMINS WHERE AdminUserName = N'{username}' ''')
    if mycursor.fetchone()[0] == 1:
        return True
    return False


def checkIfExistChats():
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT COUNT(*) FROM CHATS''')
    if mycursor.fetchone()[0] > 0:
        return True
    return False


def GetChatsId():
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT * FROM CHATS''')
    listId = []
    for row in mycursor.fetchall():
        listId.append(row[0])
        print(row[0])
    return listId


def checkIfExistsCategory(categoryLogical):
    category = proccesAnegdotOrCategoryName(categoryLogical)
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT COUNT(*) FROM CATEGORIES WHERE CategoryNameLogical = N'{category}' ''')
    if mycursor.fetchone()[0] == 1:
        return True
    return False


def checkIfExistsAnedgot(categoryLogical, anegdotLogical):
    category = proccesAnegdotOrCategoryName(categoryLogical)
    anegdot = proccesAnegdotOrCategoryName(anegdotLogical)
    mycursor = mydb.cursor()
    mycursor.execute(
        f'''SELECT COUNT(*) FROM ANEGDOTS WHERE CategoryNameLogical = N'{category}' AND AnegdotLogical = N'{anegdot}' ''')
    if mycursor.fetchone()[0] == 1:
        return True
    return False


def checkIfExistsAnedgotWithoutCategory(anegdotLogical):
    anegdot = proccesAnegdotOrCategoryName(anegdotLogical)
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT COUNT(*) FROM ANEGDOTS WHERE AnegdotLogical = N'{anegdot}' ''')
    if mycursor.fetchone()[0] == 1:
        return True
    return False


def checkIfNotExistAnedgots():
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT COUNT(*) FROM ANEGDOTS''')
    if mycursor.fetchone()[0] == 0:
        return True
    return False


def checkIfNotExistCategories():
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT COUNT(*) FROM CATEGORIES''')
    if mycursor.fetchone()[0] == 0:
        return True
    return False


def checkIfNotExistAnedgotsByCategory(categoryLogical):
    category = proccesAnegdotOrCategoryName(categoryLogical)
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT COUNT(*) FROM ANEGDOTS WHERE CategoryNameLogical = N'{category}' ''')
    if mycursor.fetchone()[0] == 0:
        return True
    return False


def addCategory(message):
    categoryNameDisplay = str(message.text).strip(" ")
    categoryNameLogical = proccesAnegdotOrCategoryName(categoryNameDisplay)
    mycursor = mydb.cursor()
    mycursor.execute(f'''INSERT INTO CATEGORIES (CategoryNameDisplay, CategoryNameLogical)
    SELECT N'{categoryNameDisplay}', N'{categoryNameLogical}'
    WHERE
        NOT EXISTS (SELECT * FROM CATEGORIES WHERE CategoryNameLogical = N'{categoryNameLogical}') ''')
    mydb.commit()
    mycursor.close()


def addAnegdotToDb(message, category):
    categoryNameDisplay = category.strip(" ")
    categoryNameLogical = proccesAnegdotOrCategoryName(categoryNameDisplay)
    anegdotDisplay = str(message.text).strip(" ")
    anegdotLogical = proccesAnegdotOrCategoryName(anegdotDisplay)
    mycursor = mydb.cursor()
    mycursor.execute(f'''INSERT INTO ANEGDOTS (AnegdotDisplay,AnegdotLogical,CategoryNameDisplay,CategoryNameLogical)
    SELECT N'{anegdotDisplay}',N'{anegdotLogical}', N'{categoryNameDisplay}', N'{categoryNameLogical}'
    WHERE
        NOT EXISTS (SELECT * FROM ANEGDOTS WHERE CategoryNameLogical = N'{categoryNameLogical}' AND AnegdotLogical = N'{anegdotLogical}')''')
    mydb.commit()
    mycursor.close()


def removeAnegdotFromDb(anegdot):
    anegdotLogical = proccesAnegdotOrCategoryName(str(anegdot))
    mycursor = mydb.cursor()
    mycursor.execute(f''' DELETE FROM ANEGDOTS WHERE AnegdotLogical = N'{anegdotLogical}' ''')
    mydb.commit()
    mycursor.close()


def AddChat(message):
    mycursor = mydb.cursor()
    mycursor.execute(f'''INSERT INTO CHATS (ChatId)
    SELECT {message.chat.id}
    WHERE
        NOT EXISTS (SELECT * FROM CHATS WHERE ChatId = {message.chat.id} ) ''')
    mydb.commit()
    mycursor.close()


def getCategories():
    mycursor = mydb.cursor()
    mycursor.execute('''SELECT * FROM CATEGORIES''')
    info = mycursor.fetchall()
    listCategories = []
    for row in info:
        listCategories.append(row[1])
    print(listCategories)
    return listCategories


def getAnegdot():
    mycursor = mydb.cursor()
    mycursor.execute('''SELECT * FROM ANEGDOTS''')
    info = mycursor.fetchall()
    listAnegdots = []
    for row in info:
        listAnegdots.append(row[1])
    print(listAnegdots)
    anegdot = random.choice(listAnegdots)
    return anegdot


def getAnegdotByCategory(categoryname):
    categoryNameLogical = proccesAnegdotOrCategoryName(categoryname)
    mycursor = mydb.cursor()
    mycursor.execute(f'''SELECT * FROM ANEGDOTS WHERE CategoryNameLogical = N'{categoryNameLogical}' ''')
    info = mycursor.fetchall()
    listAnegdots = []
    for row in info:
        listAnegdots.append(row[1])
    print(listAnegdots)
    anegdot = random.choice(listAnegdots)
    return anegdot


def deleteCategory(category):
    categoryNameLogical = proccesAnegdotOrCategoryName(category)
    mycursor = mydb.cursor()
    mycursor.execute(f"DELETE FROM CATEGORIES WHERE CategoryNameLogical = N'{categoryNameLogical}' ")
    mydb.commit()
    mycursor.close()


def deleteAnegdotsByCategory(category):
    categoryNameLogical = proccesAnegdotOrCategoryName(category)
    print(category)
    mycursor = mydb.cursor()
    mycursor.execute(f"DELETE FROM ANEGDOTS WHERE CategoryNameLogical = N'{categoryNameLogical}' ")
    mydb.commit()
    mycursor.close()


def deleteNoneAnegdots():
    mycursor = mydb.cursor()
    mycursor.execute(f"DELETE FROM ANEGDOTS WHERE AnegdotDisplay = 'None' ")
    mydb.commit()
    mycursor.close()


def DeleteChat(chat_id):
    mycursor = mydb.cursor()
    mycursor.execute(f"DELETE FROM CHATS WHERE ChatId = '{chat_id}' ")
    mydb.commit()
    mycursor.close()


def deleteExactlyAnegdots():
    mycursor = mydb.cursor()
    mycursor.execute(f"DELETE FROM ANEGDOTS WHERE AnegdotDisplay = '- Аргументуй.\n- Чим?\n- Аргументом.' ")
    mydb.commit()
    mycursor.close()


def deleteExactlyCategories():
    mycursor = mydb.cursor()
    mycursor.execute(f"DELETE FROM CATEGORIES WHERE CategoryNameDisplay = 'Наївся я приколів і пішов' ")
    mydb.commit()
    mycursor.close()


def proccesAnegdotOrCategoryName(name):
    completeName = str(name).strip(" ")
    completeName = completeName.lower()
    return completeName